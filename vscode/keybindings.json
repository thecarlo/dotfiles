// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+shift+cmd+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "ctrl+cmd+r",
    "command": "editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+cmd+l",
    "command": "bookmarks.listFromAllFiles"
  },
  {
    "key": "ctrl+alt+cmd+m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+alt+cmd+d",
    "command": "extension.js-debug.createDebuggerTerminal"
  },
  {
    "key": "shift+cmd+f n",
    "command": "fileutils.newFolderAtRoot"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.action.terminal.searchWorkspace",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "shift+cmd+f",
    "command": "-workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "key": "shift+alt+f",
    "command": "-filesExplorer.findInFolder",
    "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+cmd+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "ctrl+alt+cmd+o",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "alt+cmd+t",
    "command": "-workbench.action.closeOtherEditors"
  },
  {
    "key": "cmd+h",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "alt+cmd+f",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+d",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+n",
    "command": "extension.advancedNewFile",
    "when": "!terminalFocus"
  },
  {
    "key": "alt+cmd+n",
    "command": "-extension.advancedNewFile"
  },
  {
    "key": "shift+cmd+k w",
    "command": "workbench.action.closeAllGroups"
  },
  {
    "key": "cmd+k shift+cmd+w",
    "command": "-workbench.action.closeAllGroups"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor",
    "when": "!inEditorsPicker"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.quickOpenLeastRecentlyUsedEditor",
    "when": "!inEditorsPicker"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "workbench.action.moveEditorToBelowGroup",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "workbench.action.moveEditorToAboveGroup",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "workbench.action.positionPanelRight",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "workbench.action.positionPanelLeft",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "workbench.action.positionPanelBottom",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+alt+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.quickOpenPreviousEditor"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+alt+cmd+k",
    "command": "bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+r",
    "command": "references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "ctrl+shift+p",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "shift+cmd+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+cmd+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+shift+/",
    "command": "-wallaby.toggleInspectorFocus",
    "when": "editorTextFocus && wallaby.feature.inspections && wallaby.started"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "wallaby.inspectValue"
  },
  {
    "key": "ctrl+shift+]",
    "command": "wallaby.toggleInspectorFocus"
  },
  {
    "key": "ctrl+alt+cmd+b",
    "command": "bookmarksExplorer.focus"
  },
  {
    "key": "ctrl+shift+cmd+t",
    "command": "workbench.action.tasks.runTask"
  },
  {
    "key": "ctrl+alt+cmd+a",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "ctrl+alt+cmd+,",
    "command": "workbench.action.editorLayoutSingle"
  },
  {
    "key": "ctrl+alt+cmd+8",
    "command": "cmstead.jscodeformer.convertToArrowFunction"
  },
  {
    "key": "ctrl+shift+alt+cmd+u",
    "command": "uppercase.toUpperCase"
  },
  {
    "key": "shift+alt+u",
    "command": "-uppercase.toUpperCase"
  },
  {
    "key": "ctrl+alt+cmd+g",
    "command": "workbench.view.extension.gitlensPanel"
  },
  {
    "key": "ctrl+shift+alt+cmd+d",
    "command": "fileutils.duplicateFile"
  },
  {
    "key": "cmd+k cmd+p",
    "command": "copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "cmd+k shift+alt+cmd+c",
    "command": "-copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+shift+alt+f",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+shift+cmd+r",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "ctrl+shift+cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+shift+cmd+2",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "ctrl+shift+cmd+9",
    "command": "workbench.action.closePanel"
  },
  {
    "key": "ctrl+shift+cmd+x",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+cmd+z",
    "command": "lntoggle.toggle"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-lntoggle.toggle"
  }
]
